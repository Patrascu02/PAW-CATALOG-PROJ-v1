@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);

        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-dark" href="#" id="userDropdown" role="button"
               data-bs-toggle="dropdown" aria-expanded="false">
                @currentUser.Name
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                <li><span class="dropdown-item-text">Username: @currentUser.UserName</span></li>
                <li><span class="dropdown-item-text">Email: @currentUser.Email</span></li>
                <li><span class="dropdown-item-text">ID: @currentUser.Id</span></li>
                <li><hr class="dropdown-divider" /></li>
                <li>
                    <form class="dropdown-item" method="post" asp-area="Identity" asp-page="/Account/Logout"
                          asp-route-returnUrl="@Url.Action("Index", "Home")">
                        <button type="submit" class="btn btn-link p-0 text-danger w-100 text-start">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }

</ul>
