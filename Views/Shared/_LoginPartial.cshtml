@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);

        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-dark" href="#" id="userDropdown" role="button"
               data-bs-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                @currentUser.Name
            </a>
            <ul class="dropdown-menu dropdown-menu-end shadow-sm" aria-labelledby="userDropdown">
                <li>
                    <span class="dropdown-item-text fw-semibold">Username:</span>
                    <span class="dropdown-item-text ms-2">@currentUser.UserName</span>
                </li>
                <li>
                    <span class="dropdown-item-text fw-semibold">Email:</span>
                    <span class="dropdown-item-text ms-2">@currentUser.Email</span>
                </li>
                <li>
                    <span class="dropdown-item-text fw-semibold">ID:</span>
                    <span class="dropdown-item-text ms-2">@currentUser.Id</span>
                </li>
                <li><hr class="dropdown-divider" /></li>
                <li>
                    <form method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home")" class="px-3">
                        <button type="submit" class="btn btn-link text-danger text-start w-100 p-0">Logout</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark fw-medium" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark fw-medium" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
